<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="classpath:/config/redis.properties" order="1"/>

    <context:component-scan base-package="com.bmf.aspect, com.bmf.tools, com.bmf.func"/>

    <aop:aspectj-autoproxy/>

    <bean class="com.bmf.aspect.NotVeryUsefulAspect" id="notVeryUsefulAspect"/>

    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>messages/windows</value>
            </list>
        </property>
    </bean>

    <!--redis连接池配置-->
    <bean class="redis.clients.jedis.JedisPoolConfig" id="jedisPoolConfig"
          p:maxTotal="${redis.pool.maxTotal}"
          p:maxWaitMillis="${redis.pool.maxWait}"
          p:minIdle="${redis.pool.minIdle}"
          p:maxIdle="${redis.pool.maxIdle}"
          p:testOnBorrow="${redis.pool.testOnBorrow}"/>

    <bean name="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="${redis.host-name}"
          p:password="${redis.pwd}"
          p:port="${redis.port}"
          p:usePool="true"
          p:database="${redis.database}"
          p:timeout="${redis.timeout}"
          p:poolConfig-ref="jedisPoolConfig" destroy-method="destroy" depends-on="jedisPoolConfig"/>

    <!--primary 当有两个相同的bean注入时 注入这个-->
    <bean name="jdkSerializationRedisSerializer" primary="true"
          class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>

    <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" id="stringRedisSerializer"/>

    <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"
          id="genericJackson2JsonRedisSerializer"/>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
          p:keySerializer-ref="stringRedisSerializer"
          p:valueSerializer-ref="genericJackson2JsonRedisSerializer"
          p:connection-factory-ref="jedisConnectionFactory"/>

    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg index="0" ref="redisTemplate"/>
    </bean>

    <bean id="parent" class="com.bmf.tools.Parent" abstract="true" p:single="aa" p:to="bb"/>

    <bean class="com.bmf.tools.Child" id="child" parent="parent" p:single="ab"
          p:resource="http://zhuangdan.oss-cn-beijing.aliyuncs.com/video/shilian33tian.mp4"/>

    <!--<bean class="com.bmf.reentrantLockTest.InstantiationTracingBeanPostProcessor"/>-->
</beans>